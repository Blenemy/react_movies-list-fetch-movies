{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","search","setSearch","isFailed","setIsFailed","isLoading","setIsLoading","loadMovie","value","a","preventDefault","Title","Plot","Poster","imdbID","onSubmit","event","htmlFor","type","id","placeholder","onChange","target","classnames","button","disabled","onClick","undefined","App","setMovies","some","item","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.077f24ba.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6337ec17';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classnames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMovie: (movie: Movie | undefined) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState<Movie | undefined>();\n  const [isFailed, setIsFailed] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const defaultPicture\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const addMovieOnClick = () => {\n    addMovie(search);\n\n    setSearch(undefined);\n    setIsLoading(false);\n    setIsFailed(false);\n  };\n\n  const loadMovie = async (value: React.FormEvent) => {\n    value.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const movie = await getMovie(query);\n\n      if ('Error' in movie) {\n        setIsFailed(true);\n      } else {\n        setSearch({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster === 'N/A' ? defaultPicture : movie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n          imdbId: movie.imdbID,\n        });\n\n        setIsFailed(false);\n      }\n\n      setQuery('');\n    } catch {\n      throw Error('Error');\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          loadMovie(event);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          {isFailed && !query && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classnames({\n                button: true,\n                'is-light': true,\n                'is-loading': isLoading && !search && !isFailed,\n              })}\n              disabled={query === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {search && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieOnClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {search && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={search} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie | undefined) => {\n    if (!movie) {\n      return;\n    }\n\n    const uniqMovieStatus = movies.some(\n      item => item.imdbId === movie?.imdbId,\n    );\n\n    if (!uniqMovieStatus) {\n      setMovies(prev => ([\n        ...prev,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      {movies && (\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n      )}\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}